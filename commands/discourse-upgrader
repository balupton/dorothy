#!/usr/bin/env bash
# internal command: this runs on the disource machine, do not depend on anything related to dorothy
set -euo pipefail

# Receive arguments from caller
if test -z "${ssh_file_internal-}" -o -z "${ssh_pass_internal-}"; then
	echo 'For automatic SSH password insertion, you must pass the SSH file and password.' >/dev/stderr
fi

# Check discourse is already setup
if ! test -d /var/discourse; then
	echo 'Run this command on the remote discourse server'
	exit 1
fi

# Start the ssh agent
eval "$(ssh-agent -s)"

# Make sure github keys are accurate
# remove old github keys and remove its backup
ssh-keygen -R github.com
# add new github keys without conflicts
ssh-keyscan -t rsa github.com >>"/root/.ssh/known_hosts"

# Upgrading the host, which may solve SSL issues
# https://stackoverflow.com/a/61853542/130638
# https://meta.discourse.org/t/regenerating-letsencrypt-keys-from-behind-nginx/95884/3?u=balupton
# https://meta.discourse.org/t/ssl-letsencrypt-renewal-not-working-due-to-an-extra-reverse-proxy-on-the-outside/164236/2?u=balupton
apt-add-repository -y -r ppa:certbot/certbot
apt-get update -y
apt-get upgrade -y
apt-get install -y wget

# Cron Job
# Always update cron job file with the latest
discourse_cron_script='/root/discourse_cron.bash'
cat <<-EOF >"$discourse_cron_script"
	#!/usr/bin/env bash
	set -Eeuo pipefail
	docker image prune --force --all --filter "until=28h"
	cd /var/discourse
	git pull origin "\$(git rev-parse --abbrev-ref HEAD)"
	/var/discourse/launcher rebuild app
EOF
chmod +x "$discourse_cron_script"
# Check if the cron job file is actually used
echo 'Checking cron job upgrader...'
while ! (crontab -l | grep --quiet --fixed-strings --regexp="$discourse_cron_script"); do
	cat <<-EOF
		CRON JOB DOES NOT EXIST FOR UPGRADING DISCOURSE
		COPY THE BELOW INTO THE PROMPT AND SAVE

		# at midnight each day, upgrade the discourse forum
		0 0 * * * $discourse_cron_script
	EOF
	read -r -n 1 -p 'ARE YOU READY?'
	env EDITOR='/bin/nano' crontab -e
done

# Work around SSH password: https://stackoverflow.com/a/52671286/130638
if test -n "${ssh_pass_internal-}"; then
	ssh_stdin_pass_helper='/root/ssh_stdin_password.bash'
	cat <<-EOF >"$ssh_stdin_pass_helper"
		#!/usr/bin/env bash
		read secret
		echo \$secret
	EOF
	chmod +x "$ssh_stdin_pass_helper"

	echo 'Adding the SSH keys...'
	DISPLAY=:0 SSH_ASKPASS="$ssh_stdin_pass_helper" ssh-add "$ssh_file_internal" <<<"$ssh_pass_internal"
elif test -n "${ssh_file_internal-}"; then
	ssh-add "$ssh_file_internal"
fi

echo 'Trimming unused Docker images to free up space...'
docker ps -a
docker image list
docker image prune --force --all --filter "until=28h"
docker image list

echo 'Updating the local server configuration...'
cd /
git fetch origin
git pull origin "$(git rev-parse --abbrev-ref HEAD)" # master -> main switches can bust things, so that code figured out the right branch

echo 'Updating the discourse docker setup...'
cd /var/discourse
git pull origin "$(git rev-parse --abbrev-ref HEAD)" # master -> main switches can bust things, so that code figured out the right branch

echo 'Rebuilding the discourse docker instance...'
/var/discourse/launcher rebuild app
