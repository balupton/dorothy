#!/usr/bin/env bash

function flac_to_alac() (
	source "$DOROTHY/sources/bash.bash"

	# =====================================
	# Arguments

	function help {
		cat <<-EOF >/dev/stderr
			ABOUT:
			Convert the inputs into Apple Lossless

			USAGE:
			flac-to-alac ...<input>

			EXAMPLE:
			flac-to-alac -- *.flac
		EOF
		if test "$#" -ne 0; then
			echo-error "$@"
		fi
		return 22 # EINVAL 22 Invalid argument
	}

	# process
	local item files=()
	while test "$#" -ne 0; do
		item="$1"
		shift
		case "$item" in
		'--help' | '-h') help ;;
		'--'*) help "An unrecognised flag was provided: $item" ;;
		*) files+=("$item") ;;
		esac
	done

	# if no files, then use all flac files in the current directory
	if test "${#files[@]}" -eq 0; then
		files=(./*.flac)
	fi

	# =====================================
	# Act

	# convert
	local input filename output
	for input in "${files[@]}"; do
		filename="$(fs-filename -- "$input")"
		output="$filename.m4a"
		eval-helper --quiet \
			--pending="$(echo-style --bold="Converting " --code="$input" --bold=" to " --code="$output")" \
			--success="$(echo-style --bold+green="Converted " --code="$input" --bold=" to " --code="$output")" \
			--failure="$(echo-style --bold+red="Failed to convert " --code="$input" --bold=" to " --code="$output")" \
			-- ffmpeg -y -vn -i "$input" -c:a alac "$output" </dev/null
	done
)

# fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	flac_to_alac "$@"
fi
